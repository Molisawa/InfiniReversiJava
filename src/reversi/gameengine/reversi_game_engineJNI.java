/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package reversi.gameengine;

public class reversi_game_engineJNI {
  public final static native void Piece_pieceType_set(long jarg1, Piece jarg1_, int jarg2);
  public final static native int Piece_pieceType_get(long jarg1, Piece jarg1_);
  public final static native long new_Piece();
  public final static native void delete_Piece(long jarg1);
  public final static native void Movement_pieceType_set(long jarg1, Movement jarg1_, int jarg2);
  public final static native int Movement_pieceType_get(long jarg1, Movement jarg1_);
  public final static native void Movement_x_set(long jarg1, Movement jarg1_, int jarg2);
  public final static native int Movement_x_get(long jarg1, Movement jarg1_);
  public final static native void Movement_y_set(long jarg1, Movement jarg1_, int jarg2);
  public final static native int Movement_y_get(long jarg1, Movement jarg1_);
  public final static native long new_Movement();
  public final static native void delete_Movement(long jarg1);
  public final static native void Player_isHuman_set(long jarg1, Player jarg1_, boolean jarg2);
  public final static native boolean Player_isHuman_get(long jarg1, Player jarg1_);
  public final static native long new_Player();
  public final static native void delete_Player(long jarg1);
  public final static native void Board_state_set(long jarg1, Board jarg1_, long jarg2);
  public final static native long Board_state_get(long jarg1, Board jarg1_);
  public final static native void Board_difficulty_set(long jarg1, Board jarg1_, int jarg2);
  public final static native int Board_difficulty_get(long jarg1, Board jarg1_);
  public final static native void Board_historyBack_set(long jarg1, Board jarg1_, long jarg2, Movement jarg2_);
  public final static native long Board_historyBack_get(long jarg1, Board jarg1_);
  public final static native void Board_historyForward_set(long jarg1, Board jarg1_, long jarg2, Movement jarg2_);
  public final static native long Board_historyForward_get(long jarg1, Board jarg1_);
  public final static native void Board_noOfMovesBack_set(long jarg1, Board jarg1_, int jarg2);
  public final static native int Board_noOfMovesBack_get(long jarg1, Board jarg1_);
  public final static native void Board_lastPiecetypeMoved_set(long jarg1, Board jarg1_, int jarg2);
  public final static native int Board_lastPiecetypeMoved_get(long jarg1, Board jarg1_);
  public final static native void Board_noOfMovesFoward_set(long jarg1, Board jarg1_, int jarg2);
  public final static native int Board_noOfMovesFoward_get(long jarg1, Board jarg1_);
  public final static native void Board_initialized_set(long jarg1, Board jarg1_, boolean jarg2);
  public final static native boolean Board_initialized_get(long jarg1, Board jarg1_);
  public final static native void Board_size_set(long jarg1, Board jarg1_, int jarg2);
  public final static native int Board_size_get(long jarg1, Board jarg1_);
  public final static native void Board_custom_set(long jarg1, Board jarg1_, boolean jarg2);
  public final static native boolean Board_custom_get(long jarg1, Board jarg1_);
  public final static native void Board_initialState_set(long jarg1, Board jarg1_, long jarg2);
  public final static native long Board_initialState_get(long jarg1, Board jarg1_);
  public final static native void Board_player1_set(long jarg1, Board jarg1_, long jarg2, Player jarg2_);
  public final static native long Board_player1_get(long jarg1, Board jarg1_);
  public final static native void Board_player2_set(long jarg1, Board jarg1_, long jarg2, Player jarg2_);
  public final static native long Board_player2_get(long jarg1, Board jarg1_);
  public final static native long new_Board();
  public final static native void delete_Board(long jarg1);
  public final static native void setCustomBoardState(long jarg1, Board jarg1_);
  public final static native void initializeGame(long jarg1, Board jarg1_, int jarg2, int jarg3, boolean jarg4, long jarg5, Player jarg5_, long jarg6, Player jarg6_);
  public final static native void initializeBoard(long jarg1, Board jarg1_);
  public final static native int getNumberOfMoves(long jarg1, Board jarg1_, int jarg2);
  public final static native int getPointEvaluator(long jarg1, Board jarg1_, int jarg2);
  public final static native int getScorePosition(long jarg1, Board jarg1_, int jarg2);
  public final static native long getAllPossibleMoves(long jarg1, Board jarg1_, int jarg2);
  public final static native void goBack(long jarg1, Board jarg1_);
  public final static native void goForward(long jarg1, Board jarg1_);
  public final static native boolean canGoBack(long jarg1, Board jarg1_);
  public final static native boolean canGoFoward(long jarg1, Board jarg1_);
  public final static native long getJavaPossibleMovements(long jarg1, Board jarg1_, int jarg2, int jarg3);
  public final static native long getJavaState(long jarg1, Board jarg1_, int jarg2, int jarg3);
  public final static native void setEditorPieceType(long jarg1, Board jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int nextTurn(long jarg1, Board jarg1_);
  public final static native String saveGame(long jarg1, Board jarg1_);
  public final static native long loadGame(String jarg1);
  public final static native boolean isValidMove(long jarg1, Board jarg1_, long jarg2, Movement jarg2_);
  public final static native boolean isGameOver(long jarg1, Board jarg1_);
  public final static native int getWinner(long jarg1, Board jarg1_);
  public final static native void SetHelpers(long jarg1, Board jarg1_, int jarg2);
  public final static native void cleanHelpers(long jarg1, Board jarg1_);
  public final static native void makeMove(long jarg1, Board jarg1_, long jarg2, Movement jarg2_);
  public final static native void makeRealMove(long jarg1, Board jarg1_, long jarg2, Movement jarg2_);
  public final static native void removeHistoryFoward(long jarg1, Board jarg1_);
  public final static native long randomMovement(long jarg1, Board jarg1_, int jarg2);
  public final static native long copyBoard(long jarg1, Board jarg1_);
  public final static native void destructBoard(long jarg1, Board jarg1_);
  public final static native int MinimaxSolver(int jarg1, int jarg2, int jarg3, long jarg4, Board jarg4_, int jarg5, int jarg6);
  public final static native long bestMinimaxMove(long jarg1, Board jarg1_, int jarg2);
  public final static native void computerMove(long jarg1, Board jarg1_, int jarg2);
  public final static native boolean canMove(long jarg1, Board jarg1_, int jarg2);
  public final static native long bestMove(long jarg1, Board jarg1_, int jarg2);
  public final static native int canSkipBlackPiece(long jarg1, Board jarg1_);
  public final static native int getScore(long jarg1, Board jarg1_, int jarg2);
}
